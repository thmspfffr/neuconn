%% COUNTS THE NUMBER OF ALTERED CONNECTIONS INDIVIDUALLY FOR EACH SUBJECT

% Computes strength of connection from each voxel to the rest of the brain.
% Takes this as statistical threshold to compare each voxel's connectivity
% in the diseased brain. Then counts the number of altered connections for
% each subject individually and performs statistical comparison as
% implemented in nc_src_ana_all2all_stat.m

% Takes input from the following function(s):
% (1) nc_src_ana.m (v_pow!)
% (2) nc_src_powcorr_diff.m

% last update: 22-02-2015, tpfeffer

% to be implemented:
% - statistical test
% - paired test instead of taking average across all HCs

% execute as
% --------------------------------------------------------
% nc_src_ana_all2all_stat_indiv
% --------------------------------------------------------
function nc_src_ana_aal(rand_num)

% clear all
%%
% --------------------------------------------------------
% VERSION 1: 
% --------------------------------------------------------
% v_out = 1;
% v_pow = 10; % 10: beamformer + powercorrelations
% tri = 0;
% NSUBJ = 22;
% --------------------------------------------------------
% VERSION 2: 
% --------------------------------------------------------
v_out = 2;
v_pow = 7; % 10: eloreta + powercorrelations
tri = 0;
NSUBJ = 22;
% --------------------------------------------------------

if exist('rand_num','var')
  rng(rand_num,'twister')
end

m = 1;

restoredefaultpath
foi_range = unique(round(2.^[1:.25:7]));

% addpaths
addpath /home/gnolte/meg_toolbox/toolbox/
addpath /home/gnolte/meg_toolbox/fieldtrip_utilities/
addpath /home/gnolte/meg_toolbox/toolbox_nightly/
addpath /home/gnolte/meg_toolbox/meg/
addpath /home/tpfeffer/Documents/MATLAB/fieldtrip-20130925/
addpath /home/gnolte/neuconn/matlab/rest/
addpath ~/pconn/matlab/

ft_defaults

% Define relevant input/output paths
indir   = '/home/gnolte/neuconn/meg_out/rest/conn/';
mridir  = '/home/gnolte/neuconn/mri_data/';
outdir  = '/home/gnolte/neuconn/meg_out/rest/stats/';
plotdir = '/home/gnolte/neuconn/meg_out/rest/plots/';
% call subj info startup function
allsubj = nc_allsubj_start(m);

% rng('shuffle');

%%

load aalmask_grid_coarse

load([indir sprintf('nc_src_allpowcorr_f%d_v%d.mat',1,v_pow)]); clear allpow
  
SUBJLIST = intersect(allsubj{1},allsubj{2});

NSUBJ = length(SUBJLIST);

aalpow = zeros(91,91,2,length(SUBJLIST),23);

for ifoi = 1 : 23
  
  disp(ifoi)
%   pause(ceil(rand*150));
  
%   if ~exist([outdir sprintf('nc_src_ana_aal_f%d_v%d_processing.txt',ifoi,v_out)])
%     system(['touch ' outdir sprintf('nc_src_ana_aal_f%d_v%d_processing.txt',ifoi,v_out)]);
%   else
%     continue
%   end
  
  disp(sprintf('Processing freq %d ... Loading data ...',ifoi));
  
  load([indir sprintf('nc_src_allpowcorr_f%d_v%d.mat',ifoi,v_pow)])
  
  disp(sprintf('Processing freq %d ... Data loaded ...',ifoi));
  
  if ~tri
    allpow        = single(allpow(:,:,:,1:NSUBJ));
  else
    allpow        = single(allpow(:,:,:,1:NSUBJ));
  end
  
  for ireg = 1 : 91

    idx1 = aalgrid.mask==ireg;

    for jreg = 1 : 91

      idx2 = aalgrid.mask==jreg;

      if ireg == jreg 
        aalpow(ireg,jreg,:,:,ifoi) = NaN;
      else
        aalpow(ireg,jreg,:,:,ifoi) = squeeze(nanmean(nanmean(allpow(idx1,idx2,:,1:NSUBJ),1),2));
      end

    end
  end
end

save([outdir sprintf('nc_src_ana_aal_v%d.mat',v_out)],'aalpow','-v7.3');

%%


for ifoi = 1 : 23
thresh(:,:,1)=prctile(aalpow(:,:,2,:,ifoi),5,4);
thresh(:,:,2)=prctile(aalpow(:,:,2,:,ifoi),95,4);

for isubj = 1 : 34
  
  mask1(:,:,isubj)=aalpow(:,:,1,isubj,ifoi)>thresh(:,:,2);
  mask2(:,:,isubj)=aalpow(:,:,1,isubj,ifoi)<thresh(:,:,1);

  val(isubj,ifoi) = sum(sum(mask1(:,isubj)));
  
end
end

%%
  [~,p]=ttest(a(:,:,2,:),a(:,:,1,:),'dim',4);

%%

for isubj = 1 : size(aalpow,4)
  isubj
  for ifoi = 1 : 23
    for icond = 1 : 2
    
    [new_matrix,all_ROI,networks_mask,net_def,net_mat]=aal_networks(aalpow(:,:,icond,isubj,ifoi));
  
     net.dmn(isubj,ifoi,icond) = nanmean(net_mat.dmn(:));  
     net.fpc(isubj,ifoi,icond) = nanmean(net_mat.fpc(:));  
     net.sal(isubj,ifoi,icond) = nanmean(net_mat.salience(:));  
     net.van(isubj,ifoi,icond) = nanmean(net_mat.van(:));  
     net.dan(isubj,ifoi,icond) = nanmean(net_mat.dan(:));  
     net.smn(isubj,ifoi,icond) = nanmean(net_mat.smn(:));  
     net.vis(isubj,ifoi,icond) = nanmean(net_mat.vis(:));  
     net.aud(isubj,ifoi,icond) = nanmean(net_mat.aud(:));  
     net.BG(isubj,ifoi,icond)  = nanmean(net_mat.BG(:));  
     
    end  
  end
end

%% PLOT SHIT

figure; set(gcf,'color','white'); hold on

plot(squeeze(nanmean(net.aud(:,:,1))),'linewidth',3)
plot(squeeze(nanmean(net.aud(:,:,2))),'linewidth',3)
for ifoi = 1 : 23
[t(ifoi) p(ifoi)] = ttest(fff(:,ifoi,1),fff(:,ifoi,2));
end


%%  
  
v_pow = 7;

for ifoi = 1 : 23
  
%   d = nanmean(aalpow(:,:,2,:,ifoi),4)-nanmean(aalpow(:,:,1,:,ifoi),4);
%   imagesc(d,[-0.03 0.03])
% 
%   title(sprintf('Freq %d (raw)',ifoi))
% 
%   print(gcf,'-djpeg',sprintf('/home/gnolte/neuconn/meg_out/rest/plots/nc_src_powcorr_fcmatrix_raw_f%d_v%d.jpg',ifoi,v_pow))
%   close

  [~,p]=ttest(aalpow(:,:,2,:,ifoi),aalpow(:,:,1,:,ifoi),'dim',4);
  
  figure; set(gcf,'color','white')
  imagesc(-log10(p),[0 3])
  title(sprintf('Freq %d',ifoi))
  
  print(gcf,'-djpeg',sprintf('/home/gnolte/neuconn/meg_out/rest/plots/nc_src_powcorr_fcmatrix_f%d_v%d.jpg',ifoi,v_pow))
  close
  idx = p<0.05;
  
  imagesc(-log10(p).*idx,[0 3]);
  
  title(sprintf('Freq %d (thresholded)',ifoi))

  print(gcf,'-djpeg',sprintf('/home/gnolte/neuconn/meg_out/rest/plots/nc_src_powcorr_fcmatrix_thresh_f%d_v%d.jpg',ifoi,v_pow))
% close
end



%% PLOT ETC.
% plot differences in FC matrix

load([outdir sprintf('nc_src_ana_aal_v%d.mat',v_out)]);

figure('units','normalized','outerposition',[0 0 1 1]); set(gcf,'color','white')
for ifoi = 1 : 23
  
  subplot(5,5,ifoi);
  
  imagesc(squeeze(nanmean(aalpow(:,:,1,:,ifoi),4)-nanmean(aalpow(:,:,2,:,ifoi),4)));
  colorbar
    title(sprintf('MS - HC (F = %d Hz)',foi_range(ifoi)))

end
  
saveas(gcf,[plotdir sprintf('pconn_src_ana_aal_fc_v%d.fig',v_out)],'fig');

%% PLOT DEVIATION OF EACH SUBJECT FROM THE MEAN

for ifoi = 1 : 23
  
  m = squeeze(nanmean(aalpow(:,:,2,:,ifoi),4));
  s = squeeze(nanstd(aalpow(:,:,2,:,ifoi),[],4));

  figure('units','normalized','outerposition',[0 0 1 1]); set(gcf,'color','white')

  for isubj = 1 : NSUBJ

    subplot(5,5,isubj);
    
    x = (aalpow(:,:,1,isubj,ifoi)-m)./s;
    x(x>1.96)  = 200;
    x(x<-1.96) =-200;
    imagesc(x);
    colorbar
    title(sprintf('F%d-S%d',ifoi,isubj))
    
  end
end
  
% saveas(gcf,[plotdir sprintf('pconn_src_ana_aal_fc_v%d.fig',v_out)],'fig');


%%
% 
% % 
% v_out = 2;
% 
% for ifoi = 1 : 23
%   ifoi
%   try
%   load([outdir sprintf('nc_src_ana_all2all_stat_indiv_f%d_v%d.mat',ifoi,v_out)])
% 
%   for isubj = 1 : NSUBJ
% 
%    tmp = triu(a(:,:,isubj));
%    cnt(ifoi).abs(isubj) = sum(abs(tmp(:))); 
%    cnt(ifoi).rel(isubj) = sum(abs(tmp(:)))/length(tmp(:));
%    cnt(ifoi).pos(isubj) = sum(tmp(:)>0)/length(tmp(:));
%    cnt(ifoi).neg(isubj) = sum(tmp(:)<0)/length(tmp(:));
% 
%   end
% %     cnt(ifoi).p = nanmean(cnt(ifoi).rel);
%   p(ifoi) = nanmean(cnt(ifoi).pos);
%     n(ifoi) = nanmean(cnt(ifoi).neg);
% 
%   catch me
%   end
%   
% end
%   

% end
%   
%   para = [];
% para.mydotmarkersize=20;
% para.orientation='coronal';
% % para.colorlimits = [0 0.2];
% 
% h=figure; hold on
% set(h,'color','w');
% 
% showmri_transp_v3(mri,para,[grid nanmean(a(:,:,1),1)'],grid(1,:));
% 
%     
  
  
  
  
  
  
  
  
  
  
  
  
%   
%   switch test
%     
%     case 'ttest'
%       
%       [a,~,~,t]     = ttest2(squeeze(allpow(:,1,:)),squeeze(allpow(:,2,:)),'dim',2);
%       t             = t.tstat;
%       cnt           = [nansum(a) sum(t(logical(a))>0) sum(t(logical(a))<0)]; clear a
%       
%     case 'ranksum'
%       
%       a     = jh_ranksum(cat(3,squeeze(allpow(:,:,1,:)),squeeze(allpow(:,:,2,:))));
%       b     = a(logical(triu(ones(size(a)),1))); clear a
%       pn    = [b>0 b<0];
%       p     = 2*normcdf(-abs(b));
%       cnt 	= [sum(p<thresh) sum(p<thresh)/length(p) sum(p(pn(:,1))<thresh) sum(p(pn(:,2))<thresh)]; clear a
%       % >> cnt(:,3) => MS > HC, cnt(:,4) => HC > MS
%   end
%   
%   if perm
%     
%     cntperm = nan(NPERM,4);
%     
%     switch test
%       
%       % if statistical test is unpaired ttest
%       case 'ttest'
%         allpow	= squeeze(cat(3,allpow(:,1,:),allpow(:,2,:)));
%         
%         for iperm = 1 : NPERM
%           
%           clear a_perm
%           disp(sprintf('processing f%d / p%d ...',ifoi,iperm))
%           
%           permidx           = randperm(NSUBJ*2);
%           [a_perm,~,~,t]    = ttest2(allpow(:,permidx(1:NSUBJ)),allpow(:,permidx(NSUBJ+1:end)),'dim',2);
%           t                 = t.tstat;
%           cnt_perm(iperm,:)	= [nansum(a_perm(:)) sum(t(logical(a_perm))>0) sum(t(logical(a_perm))<0)];
%           
%         end
%         
%         % if statistical test is ranksum test
%       case 'ranksum'
%         
%         allpow	= cat(3,squeeze(allpow(:,:,1,:)),squeeze(allpow(:,:,2,:)));
%         
%         for iperm = 1 : NPERM
%           
%           clear a_perm
%           disp(sprintf('processing f%d / p%d ...',ifoi,iperm))
%           
%           permidx           = randperm(NSUBJ*2);
%           a_perm            = jh_ranksum(cat(3,squeeze(allpow(:,:,permidx(1:NSUBJ))),squeeze(allpow(:,:,permidx(NSUBJ+1:end)))));
%           b_perm            = a_perm(logical(triu(ones(size(a_perm)),1))); clear a
%           pn_perm           = [b_perm>0 b_perm<0];
%           p_perm            = 2*normcdf(-abs(b_perm));
%           cnt_perm(iperm,:)	= [sum(p_perm<thresh) sum(p_perm<thresh)/length(p_perm) sum(p_perm(pn_perm(:,1))<thresh) sum(p_perm(pn_perm(:,2))<thresh)];
%           
%         end
%     end
%     
%     save([outdir sprintf('nc_src_ana_all2all_stat_f%d_v%d.mat',ifoi,perm_v)],'cnt','cnt_perm','-v7.3');
%     
%   end
% end
% 
% 
% %% MULTIPLE COMPARISONS CORRECTION AND PLOTTING
% 
% v  = 7;
% 
% plt = 1;
% NFREQ = 23;
% 
% if plt == 1
%   
%   clear corp thresh acnt all_cnt srt
%   
%   it = 0;
%   for ifoi = 1 : 2 : NFREQ*2
%     it = it + 1;
%     load([outdir sprintf('nc_src_ana_all2all_stat_f%d_v%d.mat',it,perm_v)]);
%     all_cnt(:,ifoi:ifoi+1)  = cnt_perm(:,3:4);
%     acnt(:,ifoi:ifoi+1)     = cnt(:,3:4);
%   end
%   
% %   ranks, where 1 = min, NPERM = max
% %   for ifreq = 1 : NFREQ*2
% %     [~,~,idx_D(:,ifreq)] = unique(all_cnt(:,ifreq));
% %   end
% %   
%  for ifreq = 1 : NFREQ*2
%     [idx_D(:,ifreq)] = floor(tiedrank(all_cnt(:,ifreq)));
%  end
% %   
%   % get maximum rank across frequencies and directions
%   idx_R     = max(idx_D,[],2);
%   idx_D_max = sort(all_cnt,'ascend');
%   idx_D_max = idx_D_max(idx_R,:);
%   
%   % not sure about this part
%   % ----------------------------------
%   % thresh	= prctile(idx_R,95);
%   % all_srt = sort(all_cnt,'ascend');
%   % threshs = all_srt(thresh,:);
%   % ----------------------------------
%   
%   % ----------------------------------
%   % PLOT CORRECTED P-VALUES
%   % ----------------------------------
%   % even freqs: HC > MS
%   for ifoi = 2 : 2 : 46
%     
%     corp(ifoi)  = sum(acnt(ifoi)<idx_D_max(:,ifoi))/NPERM;
%     
%   end
%   
%   plot(corp(2 : 2 : 46),'b','LineWidth',3); hold on; 
%   
%   % odd freqs: MS > HC
%   for ifoi = 1 : 2 : 45
%     
%     corp(ifoi)  = sum(acnt(ifoi)<idx_D_max(:,ifoi))/NPERM;
%     
%   end
%   
%   plot(corp(1 : 2 : 45),'r','LineWidth',3); hold on
%   line([1 23],[.05 .05],'LineStyle','--','color','k','LineWidth',2)
%   
%   ylabel('Corrected p-value');
%   xlabel('Carrier frequency (in Hz)');
%   title('Differences in connectivity');
%   
%   set(gca,'TickDir','out','XTick',[1 4 7 11 15 19 23],'XTickLabel',[2 4 8 16 32 64 128])
%   saveas(gcf,sprintf([plotdir 'nc_src_all2all_stats_corr_v%d.fig'],v),'fig')
% 
%   % ----------------------------------
%   % UNCORRECTED P-VALUES
%   % ----------------------------------
% 
%   figure
%   
%   for ifoi = 2 : 2 : 46
%     
%     corp(ifoi)  = sum(acnt(ifoi)<all_cnt(:,ifoi))/NPERM;
%     
%   end
%   
%   plot(corp(2 : 2 : 46),'b','LineWidth',3); hold on; 
%   
%   % odd freqs: MS > HC
%   for ifoi = 1 : 2 : 45
%     
%     corp(ifoi)  = sum(acnt(ifoi)<all_cnt(:,ifoi))/NPERM;
%     
%   end
%   
%   plot(corp(1 : 2 : 45),'r','LineWidth',3); hold on
%   line([1 23],[.05 .05],'LineStyle','--','color','k','LineWidth',2)
%   
%   ylabel('Uncorrected p-value');
%   xlabel('Carrier frequency (in Hz)');
%   title('Differences in connectivity');
%   
%   set(gca,'TickDir','out','XTick',[1 4 7 11 15 19 23],'XTickLabel',[2 4 8 16 32 64 128])
% 
%   saveas(gcf,sprintf([plotdir 'nc_src_all2all_stats_uncorr_v%d.fig'],v),'fig')
% 
% 
% end
